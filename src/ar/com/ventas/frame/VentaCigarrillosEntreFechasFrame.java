/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.ActivityRow;
import ar.com.ventas.entities.Producto;
import ar.com.ventas.entities.ProductoStockOrder;
import ar.com.ventas.entities.RenglonFactura;
import ar.com.ventas.entities.RenglonNotaCredito;
import ar.com.ventas.entities.Rental;
import ar.com.ventas.entities.Rubro;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.ActivityRowService;
import ar.com.ventas.services.RenglonFacturaService;
import ar.com.ventas.services.RenglonNotaCreditoService;
import ar.com.ventas.services.RentalService;
import ar.com.ventas.services.RubroService;
import ar.com.ventas.util.UtilFrame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author argia
 */
public class VentaCigarrillosEntreFechasFrame extends javax.swing.JFrame {

    private List<Producto> productos;
    private List<ProductoStockOrder> prodStock;
    private List<Rubro> rubros;
    private Rubro rub;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form VentaCigarrillosEntreFechasFrame
     */
    public VentaCigarrillosEntreFechasFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        this.setLocationRelativeTo(null);
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deTxt = new javax.swing.JTextField();
        alTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        excelBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("INFORME DE VENTA DE CIGARRILLOS ENTRE FECHAS");

        volverBtn.setText("VOLVER");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("DESDE:");

        jLabel2.setText("HASTA:");

        deTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        deTxt.setText("DE");
        deTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deTxtKeyPressed(evt);
            }
        });

        alTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        alTxt.setText("AL");
        alTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                alTxtKeyPressed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DETALLE", "CANTIDAD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        excelBtn.setText("EXCEL");
        excelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("RUBRO:");

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(excelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(alTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(deTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(alTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(excelBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void deTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            String fe = deTxt.getText();
            int largo = fe.length();
            if (largo == 10) {
                alTxt.requestFocus();
            } else {
                if (largo > 10) {
                    JOptionPane.showMessageDialog(this, "ERROR EN LARGO DE FECHA");
                    return;
                }
            }
            fe = UtilFrame.fecha(fe);
            deTxt.setText(fe);
        }
    }//GEN-LAST:event_deTxtKeyPressed

    private void alTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            String fe = alTxt.getText();
            int largo = fe.length();
            if (largo == 10) {
                rubro();
            } else {
                if (largo > 10) {
                    JOptionPane.showMessageDialog(this, "ERROR EN LARGO DE FECHA");
                    return;
                }
            }
            fe = UtilFrame.fecha(fe);
            alTxt.setText(fe);
        }
    }//GEN-LAST:event_alTxtKeyPressed

    private void excelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnActionPerformed
        excel();
    }//GEN-LAST:event_excelBtnActionPerformed

    private void comboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboKeyPressed
        int row = combo.getSelectedIndex();
        if (row > 0) {
            if (evt.getKeyCode() == 10) {
                rub = rubros.get(row - 1);
                buscar();
            }
        }
    }//GEN-LAST:event_comboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentaCigarrillosEntreFechasFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alTxt;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JTextField deTxt;
    private javax.swing.JButton excelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void excel() {

    }

    private void limpiarCampos() {
        deTxt.setText("");
        alTxt.setText("");
        rubros = null;
        combo.removeAllItems();
        combo.addItem("");
        try {
            rubros = new RubroService().getAllRubros();
        } catch (Exception ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rubros != null && !rubros.isEmpty()) {
            for (Rubro r : rubros) {
                combo.addItem(r.getNombre());
            }
        }
    }

    private void buscar() {
        // renglonFactura
        Date df = new Date();
        Date af = new Date();
        try {
            df = sdf.parse(deTxt.getText());
            af = sdf.parse(alTxt.getText());
        } catch (ParseException ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "ERROR EN FECHAS");
            return;
        }
        prodStock = new ArrayList<>();
        List<RenglonFactura> rf = null;
        try {
            rf = new RenglonFacturaService().getRenglonesFcByFechasAndRubro(df, af, rub);
        } catch (Exception ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rf != null && !rf.isEmpty()) {
            for (RenglonFactura refa : rf) {
                ProductoStockOrder ps = new ProductoStockOrder();
                ps.setCantidad(refa.getCantidad());
                ps.setCodigo(refa.getProducto().getCodigo());
                ps.setDetalle(refa.getDescripcion());
                ps.setTotal(refa.getTotal().floatValue());
                prodStock.add(ps);
            }
        }
        // activityrow
        List<ActivityRow> rf1 = null;
        try {
            rf1 = new ActivityRowService().getRowByFechaAndRubro(df, af, rub);
        } catch (Exception ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rf1 != null && !rf1.isEmpty()) {
            for (ActivityRow ar : rf1) {
                ProductoStockOrder ps = new ProductoStockOrder();
                ps.setCantidad(ar.getCantidad());
                ps.setCodigo(ar.getCodigoProducto());
                ps.setDetalle(ar.getDescripcion());
                ps.setTotal(ar.getTotal().floatValue());
                prodStock.add(ps);
            }
        }
        // renglon nota debito
        // renglonNotaCredito
        List<RenglonNotaCredito> rf2 = null;
        try {
            rf2 = new RenglonNotaCreditoService().getRenglonesNCByFechasAndRubro(df, af,rub);
        } catch (Exception ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rf2 != null && !rf2.isEmpty()) {
            for (RenglonNotaCredito rnc : rf2) {
                ProductoStockOrder ps = new ProductoStockOrder();
                ps.setCantidad(rnc.getCantidad());
                ps.setCodigo(rnc.getProducto().getCodigo());
                ps.setDetalle(rnc.getDescripcion());
                ps.setTotal(rnc.getTotal().floatValue());
                prodStock.add(ps);
            }
        }
        // rental (NC)
        List<Rental> rf3 = null;
        try {
            rf3 = new RentalService().getRenglonesDevolByFechas(df, af);
        } catch (Exception ex) {
            Logger.getLogger(VentaCigarrillosEntreFechasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rf3 != null && !rf3.isEmpty()) {
            for (Rental rnc : rf3) {
                ProductoStockOrder ps = new ProductoStockOrder();
                ps.setCantidad(rnc.getCantidad());
                ps.setCodigo(rnc.getCodigoProducto());
                ps.setDetalle(rnc.getDescripcion());
                ps.setTotal(rnc.getTotal().floatValue());
                prodStock.add(ps);
            }
        }
        Collections.sort(prodStock);
        UtilFrame.limpiarTabla(tabla);
        DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
        for (ProductoStockOrder pso : prodStock) {
            Object o[] = new Object[3];
            o[0] = pso.getCodigo();
            o[1] = pso.getDetalle();
            o[2] = pso.getCantidad();
            tbl.addRow(o);
        }
        tabla.setModel(tbl);
    }

    private void rubro() {
        combo.addFocusListener(null);
        combo.showPopup();
        combo.requestFocus();
    }
}
