/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.ComprobanteCompras;
import ar.com.ventas.entities.CuentaCorrienteProveedor;
import ar.com.ventas.entities.Proveedor;
import ar.com.ventas.entities.ReciboProveedor;
import ar.com.ventas.services.ComprobanteComprasService;
import ar.com.ventas.services.CuentaCorrienteProveedorService;
import ar.com.ventas.services.ReciboProveedorService;
import ar.com.ventas.util.UtilFrame;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class ComposicionSaldoComprasFrame extends javax.swing.JFrame {

    private final Proveedor proveedor;
    private final SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private final DecimalFormat df1 = new DecimalFormat("#0");
    private final DecimalFormat df = new DecimalFormat("#0.00");
//    private final Date fecha = new Date();
//    private final Integer menu;
    private List<CuentaCorrienteProveedor> ctaCteP;
    private List<CuentaCorrienteProveedor> ctaCteP_crono;
    private List<ComprobanteCompras> comprobantes;
    private List<ReciboProveedor> recibos;
    private List<ComprobanteCompras> notasDeCredito;

    /**
     * Creates new form ComposicionSaldoComprasFrame
     *
     * @param pro
     * @param menu
     */
    public ComposicionSaldoComprasFrame(Proveedor pro, Integer menu) {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
//        this.menu = menu;
        this.proveedor = pro;
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        proveedorTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        saldoTxt = new javax.swing.JTextField();
        saldoCtaTxt = new javax.swing.JTextField();
        volverBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        pendienteAcreditarRcTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pendienteAcreditarNcTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("COMPOSICION SALDO PROVEEDOR");

        jLabel1.setText("PROVEEDOR:");

        proveedorTxt.setText("PROVEEDOR");

        jLabel2.setText("SALDO EN PROVE:");

        jLabel3.setText("SALDO CTA.CTE.:");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ENTREGADO", "F.VENC.", "NUMERO", "IMPORTE", "PAGADO", "SALDO", "ACUMULADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        saldoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        saldoTxt.setText("SALDO");

        saldoCtaTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        saldoCtaTxt.setText("SALDO CTA CTE");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("PENDIENTE DE ACREDITAR:");

        pendienteAcreditarRcTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pendienteAcreditarRcTxt.setText("PENDIENTE ACREDI RC");

        jLabel5.setText("RECIBOS:");

        jLabel6.setText("NOTA DE CREDITO:");

        pendienteAcreditarNcTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pendienteAcreditarNcTxt.setText("PEND ACRED NC");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(proveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(saldoCtaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(saldoTxt))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pendienteAcreditarRcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pendienteAcreditarNcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(162, 162, 162)
                                        .addComponent(jLabel4)))))
                        .addGap(0, 126, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(proveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(saldoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(saldoCtaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pendienteAcreditarRcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(pendienteAcreditarNcTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(volverBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComposicionSaldoComprasFrame(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pendienteAcreditarNcTxt;
    private javax.swing.JTextField pendienteAcreditarRcTxt;
    private javax.swing.JTextField proveedorTxt;
    private javax.swing.JTextField saldoCtaTxt;
    private javax.swing.JTextField saldoTxt;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        recibos = null;
        notasDeCredito = null;
        Double totalRecibos = 0.0;
        Double totalNotaCredito = 0.0;
        try {
            recibos = new ReciboProveedorService().getRecibosPorProveedorNoImputados(proveedor);
        } catch (Exception ex) {
            Logger.getLogger(AplicarCreditoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (recibos != null && !recibos.isEmpty()) {
            for (ReciboProveedor rc : recibos) {
                if (rc.getImporteImputado() != null) {
                    totalRecibos += rc.getImporte() - rc.getImporteImputado();
                } else {
                    totalRecibos += rc.getImporte();
                }
            }
        }
        try {
            notasDeCredito = new ComprobanteComprasService().getNotasCreditoImpagosByProveedor(proveedor);
        } catch (Exception ex) {
            Logger.getLogger(AplicarCreditoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (notasDeCredito != null && !notasDeCredito.isEmpty()) {
            for (ComprobanteCompras fc : notasDeCredito) {
                if (fc.getPagado() != null) {
                    totalNotaCredito += fc.getTotal() - fc.getPagado();
                } else {
                    totalNotaCredito += fc.getTotal();
                }
            }
        }
        pendienteAcreditarRcTxt.setText(df.format(totalRecibos));
        pendienteAcreditarNcTxt.setText(df.format(totalNotaCredito));
        proveedorTxt.setText(proveedor.getRazonSocial());
        saldoTxt.setText(df.format(proveedor.getSaldo()));
//        ctaCteP = null;
        ctaCteP_crono = null;
//        try {
//            ctaCteP = new CuentaCorrienteProveedorService().getAllByProveedorInverso(proveedor);
//        } catch (Exception ex) {
//            Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        Date de = new Date();
        Date al = new Date();
        Calendar cal = Calendar.getInstance();

        cal.set(Calendar.MONTH, cal.get(Calendar.MONTH) - 11);
        de = cal.getTime();

        try {
//            ctaCteP_crono = new CuentaCorrienteProveedorService().getAllByProveedor(proveedor);
            ctaCteP_crono = new CuentaCorrienteProveedorService().getCtaCteProvByProvMasFechasInverso(proveedor, de, al);

        } catch (Exception ex) {
            Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ctaCteP_crono != null && !ctaCteP_crono.isEmpty()) {
            saldoCtaTxt.setText(df.format(ctaCteP_crono.get(0).getSaldo()));
        } else {
            saldoCtaTxt.setText(df.format(0.0));
        }
        comprobantes = null;
        try {
//            comprobantes = new ComprobanteComprasService().getComprobantesImpagosByProveedor(proveedor);
            comprobantes = new ComprobanteComprasService().getFcPorProveedorImpagasPorVencimiento(proveedor);
        } catch (Exception ex) {
            Logger.getLogger(ComposicionSaldoComprasFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        UtilFrame.limpiarTabla(tabla);
        Double tt = 0.0;
        if (comprobantes != null && !comprobantes.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (ComprobanteCompras cc : comprobantes) {
                Object o[] = new Object[7];
                o[0] = sdf.format(cc.getFechaEntrega());
                if (cc.getFechaCalculoVencimiento() != null) {
                    o[1] = sdf.format(cc.getFechaCalculoVencimiento());
                }
                o[2] = cc.getNumeroFactura();
                Double saldo = cc.getTotal() - cc.getPagado();
                tt += saldo;
                o[3] = df.format(cc.getTotal());
                o[4] = df.format(cc.getPagado());
                o[5] = df.format(saldo);
                o[6] = df.format(tt);
                tbl.addRow(o);
            }
            tabla.setModel(tbl);
        }
    }

    private void volver() {
        VerSaldosPendientesProveedoresFrame vsppf = new VerSaldosPendientesProveedoresFrame();
        vsppf.setVisible(true);
        this.dispose();
    }
}
