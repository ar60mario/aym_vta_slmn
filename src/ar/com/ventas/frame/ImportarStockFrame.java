/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Producto;
import ar.com.ventas.entities.Usuario;
import ar.com.ventas.services.ProductoService;
import ar.com.ventas.util.LectorDeExcel;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.read.biff.BiffException;

/**
 *
 * @author Marcela
 */
public class ImportarStockFrame extends javax.swing.JFrame {

    private File archivoImportado = null;
    private List<Producto> listaProductos = null;
    private final Boolean xN;
    private Usuario u;
    private String fil;

    /**
     * Creates new form ImportarProducto
     *
     * @param archivo
     * @param u
     * @param fil
     * @param xN
     */
    public ImportarStockFrame(File archivo, Usuario u, String fil, Boolean xN) {
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        initComponents();
        this.archivoImportado = archivo;
        this.u = u;
        this.fil = fil;
        this.xN = xN;
        try {
            this.llenarTablaProductoImportado();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error importando los datos.\nSi esto persiste, asegurese que el archivo sea correcto.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductoImportado = new javax.swing.JTable();
        aceptarBtn = new javax.swing.JButton();
        cancelarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tablaProductoImportado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "DESCRIPCION", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProductoImportado);
        if (tablaProductoImportado.getColumnModel().getColumnCount() > 0) {
            tablaProductoImportado.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablaProductoImportado.getColumnModel().getColumn(1).setPreferredWidth(300);
            tablaProductoImportado.getColumnModel().getColumn(2).setPreferredWidth(40);
        }

        aceptarBtn.setText("Actualizar");
        aceptarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarBtnActionPerformed(evt);
            }
        });

        cancelarBtn.setText("Cancelar");
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(aceptarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarBtn)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptarBtn)
                    .addComponent(cancelarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
        volver();
    }//GEN-LAST:event_cancelarBtnActionPerformed

    private void aceptarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarBtnActionPerformed
        guardarProductos();
    }//GEN-LAST:event_aceptarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportarStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportarStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportarStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportarStockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImportarStockFrame(null, null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarBtn;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProductoImportado;
    // End of variables declaration//GEN-END:variables

    private void llenarTablaProductoImportado() throws IOException, BiffException, Exception {
        listaProductos = LectorDeExcel.leerExcelProducto(archivoImportado);
        DefaultTableModel modelo = (DefaultTableModel) tablaProductoImportado.getModel();
        if (listaProductos != null && !listaProductos.isEmpty()) {
            for (Producto produ : listaProductos) {
                Object[] fila = new Object[3];
                fila[0] = produ.getCodigo();
                fila[1] = produ.getDetalle();
                fila[2] = produ.getStock();
                modelo.addRow(fila);
            }
            tablaProductoImportado.setModel(modelo);
        } else {
            Object[] mensaje = new Object[2];
            mensaje[0] = " ";
            mensaje[1] = "No se recuperó ningún PRODUCTO del archivo";
            modelo.addRow(mensaje);
            aceptarBtn.setEnabled(false);
        }
    }

    private void guardarProductos() {
        int confirm = JOptionPane.showConfirmDialog(this, "Se actualizarán todos los PRODUCTOS listados.\n¿Confirma la operación?",
                "Confirmar", JOptionPane.OK_CANCEL_OPTION);
        if (confirm == JOptionPane.OK_OPTION) {
            for (Producto p : listaProductos) {
                Producto pro = null;
                try {
                    pro = new ProductoService().getProductoByCodigo(p.getCodigo());
                    pro.setStock(p.getStock());
                    pro.setStockMinimo(0.0F);
                    new ProductoService().updateProducto(pro);
                } catch (Exception ex) {
                    Logger.getLogger(ImportarStockFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex.getMessage(),
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        JOptionPane.showMessageDialog(this, "PROCESO TERMINADO");
        volver();
    }

    private void volver() {
        AbmStockFrame mf = new AbmStockFrame(u, fil, xN);
        mf.setVisible(true);
        this.dispose();
    }
}
