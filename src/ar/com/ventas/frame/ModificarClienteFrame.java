/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Cliente;
import ar.com.ventas.entities.ClienteTraba;
import ar.com.ventas.entities.Customer;
import ar.com.ventas.entities.CustomerTraba;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.Usuario;
import ar.com.ventas.services.ClienteService;
import ar.com.ventas.services.ClienteTrabaService;
import ar.com.ventas.services.CustomerService;
import ar.com.ventas.services.CustomerTrabaService;
import ar.com.ventas.services.UsuarioService;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Marcela
 */
public class ModificarClienteFrame extends javax.swing.JFrame {

    private final Logger logger = Logger.getLogger("EditarClienteFrame");
    private DecimalFormat df = new DecimalFormat("#0.00");
    private Cliente cliente;
    private Customer customer;
    private Integer row;
    private Usuario usuario;
    private final Integer nivel = 2;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private String fil;
    private Boolean alpha;
    private Integer pagina;
    private String fil2;
    private String codigo;

    // private Domicilio domicilio;
    /**
     *
     * @param clie
     * @param row
     * @param pagina
     * @param fil
     * @param alpha
     * @param fil2
     * @param codigo
     */
    public ModificarClienteFrame(Cliente clie, Integer row, Integer pagina,
            String fil, Boolean alpha, String fil2, String codigo) {
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        initComponents();
        //limpiarCampos();
        this.cliente = clie;
        this.row = row;
        this.fil = fil;
        this.pagina = pagina;
        this.alpha = alpha;
        this.codigo = codigo;
        this.fil2 = fil2;

        String cod = cliente.getCodigo();
        customer = null;
        try {
            customer = new CustomerService().getCustomerByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        if (customer == null) {
            customer = new Customer();
            customer.setCodigo(cod);
            customer.setSaldo(0.0);
            customer.setActivo(true);
            customer.setTieneDescuento(false);
            customer.setDescuento(0F);
            try {
                customer = new CustomerService().saveCustomer(customer);
            } catch (Exception ex) {
                Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
        }
        llenarCampos(cliente, customer);
        obsTxt.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guardarClienteBtn = new javax.swing.JButton();
        volverNuevoClienteBtn = new javax.swing.JButton();
        codigoTxt = new javax.swing.JTextField();
        razonSocialTxt = new javax.swing.JTextField();
        cuitTxt = new javax.swing.JTextField();
        calleTxt = new javax.swing.JTextField();
        telTxt = new javax.swing.JTextField();
        celTxt = new javax.swing.JTextField();
        mailTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        obsTxt = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        numeroTxt = new javax.swing.JTextField();
        pisoTxt = new javax.swing.JTextField();
        departamentoTxt = new javax.swing.JTextField();
        localidadTxT = new javax.swing.JTextField();
        provinciaTxt = new javax.swing.JTextField();
        descuentoTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        codigoPostalTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        llevaDtoChk = new javax.swing.JCheckBox();
        comboCategoria = new javax.swing.JComboBox();
        comboFormasPago = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        activoCfChk = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        saldoOfTxt = new javax.swing.JTextField();
        saldoCfTxt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        activoOfChk = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        guardarClienteBtn.setText("Guardar");
        guardarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarClienteBtnActionPerformed(evt);
            }
        });

        volverNuevoClienteBtn.setText("Volver");
        volverNuevoClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverNuevoClienteBtnActionPerformed(evt);
            }
        });

        codigoTxt.setText("Id");
        codigoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoTxtActionPerformed(evt);
            }
        });

        razonSocialTxt.setText("Razón Social");

        cuitTxt.setText("Cuit");
        cuitTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuitTxtActionPerformed(evt);
            }
        });

        calleTxt.setText("Domicilio");
        calleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calleTxtActionPerformed(evt);
            }
        });

        telTxt.setText("Teléfono");

        celTxt.setText("Celular");

        mailTxt.setText("Maiil");

        jLabel1.setText("Codigo:");

        jLabel2.setText("Razón Social");

        jLabel3.setText("Cuit");

        jLabel4.setText("Calle");

        jLabel5.setText("Categoria");

        jLabel6.setText("Telefono");

        jLabel7.setText("Celular");

        jLabel8.setText("Mail");

        jLabel9.setText("Observaciones");

        obsTxt.setColumns(20);
        obsTxt.setRows(5);
        jScrollPane2.setViewportView(obsTxt);

        jLabel10.setText("Numero");

        jLabel11.setText("Piso");

        jLabel12.setText("Dto");

        jLabel13.setText("Localidad");

        jLabel14.setText("Provincia");

        numeroTxt.setText("Numero");

        pisoTxt.setText("Piso");

        departamentoTxt.setText("Departam");

        localidadTxT.setText("Localidad");

        provinciaTxt.setText("Provincia");

        descuentoTxt.setText("Descuento");

        jLabel16.setText("Codigo Postal");

        codigoPostalTxt.setText("CODIGO POSTAL");

        jLabel17.setText("Forma de Pago");

        llevaDtoChk.setText("Lleva descuento");

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboFormasPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel22.setText("*");

        activoCfChk.setText("Activo CF");

        jLabel15.setText("Saldo Of:");

        jLabel24.setText("Saldo Cf:");

        saldoOfTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        saldoOfTxt.setText("SALDO OF");

        saldoCfTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        saldoCfTxt.setText("SALDO CF");

        jLabel25.setText("*");

        activoOfChk.setText("Activo OF");

        jLabel26.setText("*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(codigoTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(provinciaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                                            .addGap(39, 39, 39)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel24)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(saldoCfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel15)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(saldoOfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(15, 15, 15))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(localidadTxT, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(194, 194, 194)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(activoCfChk)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel26))
                                    .addComponent(telTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(celTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(pisoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(departamentoTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(20, 20, 20)
                                                        .addComponent(jLabel17)
                                                        .addGap(123, 123, 123))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(comboFormasPago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(llevaDtoChk)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(descuentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(10, 10, 10))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(razonSocialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(cuitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(132, 132, 132)
                                                        .addComponent(activoOfChk)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel25)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(jLabel22)))
                                .addGap(0, 16, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(guardarClienteBtn)
                                .addGap(87, 87, 87)
                                .addComponent(volverNuevoClienteBtn))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 118, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(razonSocialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel25)
                    .addComponent(activoOfChk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(activoCfChk)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(llevaDtoChk)
                    .addComponent(descuentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pisoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(departamentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboFormasPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(localidadTxT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(provinciaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(saldoOfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saldoCfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarClienteBtn)
                    .addComponent(volverNuevoClienteBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarClienteBtnActionPerformed
        if (habilitado()) {
            guardarCliente();
        }
    }//GEN-LAST:event_guardarClienteBtnActionPerformed

    private void volverNuevoClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverNuevoClienteBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverNuevoClienteBtnActionPerformed

    private void codigoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoTxtActionPerformed

    private void cuitTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuitTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuitTxtActionPerformed

    private void calleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calleTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarClienteFrame(null, null, null, null, null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoCfChk;
    private javax.swing.JCheckBox activoOfChk;
    private javax.swing.JTextField calleTxt;
    private javax.swing.JTextField celTxt;
    private javax.swing.JTextField codigoPostalTxt;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JComboBox comboCategoria;
    private javax.swing.JComboBox comboFormasPago;
    private javax.swing.JTextField cuitTxt;
    private javax.swing.JTextField departamentoTxt;
    private javax.swing.JTextField descuentoTxt;
    private javax.swing.JButton guardarClienteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox llevaDtoChk;
    private javax.swing.JTextField localidadTxT;
    private javax.swing.JTextField mailTxt;
    private javax.swing.JTextField numeroTxt;
    private javax.swing.JTextArea obsTxt;
    private javax.swing.JTextField pisoTxt;
    private javax.swing.JTextField provinciaTxt;
    private javax.swing.JTextField razonSocialTxt;
    private javax.swing.JTextField saldoCfTxt;
    private javax.swing.JTextField saldoOfTxt;
    private javax.swing.JTextField telTxt;
    private javax.swing.JButton volverNuevoClienteBtn;
    // End of variables declaration//GEN-END:variables

    private void guardarCliente() {
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Ventas/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(FacturaFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(FacturaFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(FacturaFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
        guardar2();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorización de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(FacturaFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASEÑA: " + usu.getNombre() + ", Autorización",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            guardar2();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contraseña incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }
    }

    private void guardar2() {
        String s = cliente.getCodigo();
        ClienteTraba ct = null;
        try {
            ct = new ClienteTrabaService().getClienteByCodigo(s);
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ct.getTraba1() != null) {
            if (ct.getTraba1()) {
                JOptionPane.showMessageDialog(this, "Cliente Bloqueado para esta operación");
                return;
            }
        }
        CustomerTraba cuTr = null;
        try {
            cuTr = new CustomerTrabaService().getClienteByCodigo(s);
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cuTr.getTraba2() != null) {
            if (cuTr.getTraba2()) {
                JOptionPane.showMessageDialog(this, "Cliente Bloqueado para esta operación");
                return;
            }
        }
        if (validarCampos()) {
            customer.setCodigo(codigoTxt.getText());
            customer.setObservaciones(obsTxt.getText());
            if (!descuentoTxt.getText().isEmpty()) {;
                customer.setDescuento(Float.valueOf(descuentoTxt.getText()));
            } else {
                customer.setDescuento(0F);
            }
            if (activoCfChk.isSelected()) {
                customer.setActivo(true);
            } else {
                customer.setActivo(false);
            }
            if (activoOfChk.isSelected()) {
                cliente.setActivo(true);
            } else {
                cliente.setActivo(false);
            }
            if (llevaDtoChk.isSelected()) {
                customer.setTieneDescuento(true);
            } else {
                customer.setTieneDescuento(false);
            }
            if (!existe()) {
                try {
                    new CustomerService().saveCustomer(customer);
                    new ClienteService().updateCliente(cliente);
                    JOptionPane.showMessageDialog(this, "CLIENTE guardado correctamente.");
                } catch (Exception ex) {
                    Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "CLIENTE no guardado.");
                }
            }
            try {
                new CustomerService().updateCustomer(customer);
                new ClienteService().updateCliente(cliente);
                JOptionPane.showMessageDialog(this, "CLIENTE guardado correctamente.");
            } catch (Exception ex) {
                Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "CLIENTE no guardado.");
            }
            volver();
//            AbmClienteFrame acf = new AbmClienteFrame(row, null, fil, null);
//            acf.setVisible(true);
//            this.dispose();
        }
    }

    private void llenarCampos(Cliente cliente, Customer customer) {
        Domicilio domicilio = cliente.getDomicilio();
        codigoTxt.setText(cliente.getCodigo());
        celTxt.setText(cliente.getCelular());
        cuitTxt.setText(cliente.getCuit());
        razonSocialTxt.setText(cliente.getRazonSocial());
        telTxt.setText(cliente.getTelefono());
        mailTxt.setText(cliente.getMail());
        obsTxt.setText(customer.getObservaciones());
        descuentoTxt.setText(String.valueOf(customer.getDescuento()));
        if (customer.getTieneDescuento()) {
            llevaDtoChk.setSelected(true);
        } else {
            llevaDtoChk.setSelected(false);
        }
        if (customer.getActivo()) {
            activoCfChk.setSelected(true);
        } else {
            activoCfChk.setSelected(false);
        }
        if (cliente.getActivo()) {
            activoOfChk.setSelected(true);
        } else {
            activoOfChk.setSelected(false);
        }
        // aqui se desarma domicilio en sus componentes:
        // calle numero piso dto, etc
        calleTxt.setText(domicilio.getCalle());
        numeroTxt.setText(domicilio.getNumero());
        pisoTxt.setText(domicilio.getPiso());
        departamentoTxt.setText(domicilio.getDepartamento());
        codigoPostalTxt.setText(domicilio.getCodigoPostal());
        localidadTxT.setText(domicilio.getLocalidad());
        provinciaTxt.setText(domicilio.getProvincia());
        saldoOfTxt.setText(String.valueOf(df.format(cliente.getSaldo())));
        saldoCfTxt.setText(String.valueOf(df.format(customer.getSaldo())));
        //llenar combo categoria y combo Formas pago
        comboCategoria.removeAllItems();
        comboFormasPago.removeAllItems();
        comboCategoria.addItem("");
        comboFormasPago.addItem("");
        DefaultComboBoxModel model = (DefaultComboBoxModel) comboCategoria.getModel();

        model.addElement("1- Inscripto");
        model.addElement("2- Monotributo");
        model.addElement("3- Exento");
        model.addElement("4- Consumidor Final");

        DefaultComboBoxModel model2 = (DefaultComboBoxModel) comboFormasPago.getModel();

        model2.addElement("1- Contado");
        model2.addElement("2- 7 dias fecha factura");
        model2.addElement("3- 14-dias fecha factura");
        model2.addElement("4- otro");

        comboCategoria.setModel(model);
        comboFormasPago.setModel(model2);
        if (cliente.getCategoriaDeIva() != null) {
            comboCategoria.setSelectedIndex(cliente.getCategoriaDeIva());
        }
        if (cliente.getFormaDePago() != null) {
            comboFormasPago.setSelectedIndex(cliente.getFormaDePago());
        }
        codigoTxt.setEditable(false);
        razonSocialTxt.setEditable(false);
        cuitTxt.setEditable(false);
        calleTxt.setEditable(false);
        numeroTxt.setEditable(false);
        pisoTxt.setEditable(false);
        departamentoTxt.setEditable(false);
        comboFormasPago.setEnabled(false);
        localidadTxT.setEditable(false);
        codigoPostalTxt.setEditable(false);
        provinciaTxt.setEditable(false);
        saldoOfTxt.setEditable(false);
        saldoCfTxt.setEditable(false);
        comboCategoria.setEnabled(false);
        telTxt.setEditable(false);
        celTxt.setEditable(false);
        mailTxt.setEditable(false);
    }

    private boolean validarCampos() {
        return true;
    }

    private boolean existe() {
        try {
            new CustomerService().getCustomerByCodigo(codigoTxt.getText());
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    private boolean habilitado() {
        FileReader fr = null;
        try {
            fr = new FileReader("c:/ventas/permisos.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String acceso = "";
        try {
            acceso = br.readLine();
        } catch (IOException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (acceso.equals("1")) {
            return true;
        }
        habilitar();
        return usuario != null;
    }

    private void habilitar() {
        usuario = null;
        JTextField field = new JTextField("");
        String[] options = {"Ingresar"};
        int result = JOptionPane.showOptionDialog(
                null,
                field,
                "Autorización de USUARIO",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                0);
        if (field.getText().isEmpty()) {
            usuario = null;
            return;
        }
        switch (result) {
            case 0:
                int cod = Integer.valueOf(field.getText());
                try {
                    usuario = new UsuarioService().getUsuarioByCodigo(cod);
                } catch (Exception ex) {
                    Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (usuario != null) {
                    if (usuario.getActivo()) {
                        JPasswordField field2 = new JPasswordField("");
                        String[] opts = {"Ingresar"};
                        int resulta = JOptionPane.showOptionDialog(
                                null,
                                field2,
                                "CONTRASEÑA: " + usuario.getNombre() + ", Autorización",
                                JOptionPane.OK_CANCEL_OPTION,
                                JOptionPane.QUESTION_MESSAGE,
                                null,
                                opts,
                                0);
                        switch (resulta) {
                            case 0:
                                int contra = Integer.valueOf(new String(field2.getPassword()));
                                if (contra == usuario.getContrasena()) {
                                    if (usuario.getNivel() > nivel) {
                                        JOptionPane.showMessageDialog(this, "Usuario no Habilitado");
                                        usuario = null;
                                    } else {
                                        String f1 = sdf.format(usuario.getFecha());
                                        String f2 = sdf.format(new Date());
                                        if (usuario.getNivel() == 2) {
                                            if (!f1.equals(f2)) {
                                                JOptionPane.showMessageDialog(this, "Permiso de Usuario Vencido");
                                                usuario = null;
                                            }
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Contraseña incorrecta");
                                    usuario = null;
                                }
                                break;
                            case 1:
                                usuario = null;
                                break;
                            case -1:
                                usuario = null;
                                break;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
                        usuario = null;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No existe el Usuario");
                    usuario = null;
                }
                break;
            case 1:
                usuario = null;
                break;
            case -1:
                usuario = null;
                break;
        }
    }

    private void volver() {
        AbmClienteFrame abmClienteFrame = new AbmClienteFrame(row, pagina, fil, alpha, fil2, codigo);
        abmClienteFrame.setVisible(true);
        this.dispose();
    }
}
