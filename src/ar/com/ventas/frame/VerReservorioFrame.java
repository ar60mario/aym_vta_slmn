/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.FcReserved;
import ar.com.ventas.entities.RenglonFcReserved;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.FcReservedService;
import ar.com.ventas.services.RenglonFcReservedService;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class VerReservorioFrame extends javax.swing.JFrame {

    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("#0.00");
    private List<FcReserved> fc = null;

    /**
     * Creates new form VerReservorioFrame
     */
    public VerReservorioFrame() {
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        initComponents();
//        facturarBtn.setVisible(false);
//        facturarBtn.setEnabled(false);
//        facturaWebBtn.setVisible(false);
//        facturaWebBtn.setEnabled(false);
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReservorio = new javax.swing.JTable();
        presupuestarBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        facturaWebBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tablaReservorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Código", "Razón Social", "CUIT", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaReservorio);
        if (tablaReservorio.getColumnModel().getColumnCount() > 0) {
            tablaReservorio.getColumnModel().getColumn(0).setPreferredWidth(40);
            tablaReservorio.getColumnModel().getColumn(1).setPreferredWidth(40);
            tablaReservorio.getColumnModel().getColumn(2).setPreferredWidth(300);
            tablaReservorio.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        presupuestarBtn.setText("Presupuesto");
        presupuestarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presupuestarBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        facturaWebBtn.setText("Factura Web");
        facturaWebBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaWebBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(facturaWebBtn)
                        .addGap(18, 18, 18)
                        .addComponent(presupuestarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(volverBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturaWebBtn)
                    .addComponent(presupuestarBtn)
                    .addComponent(eliminarBtn)
                    .addComponent(volverBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void presupuestarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presupuestarBtnActionPerformed
        presupuestar();
    }//GEN-LAST:event_presupuestarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        eliminar();
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void facturaWebBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaWebBtnActionPerformed
        facturaWeb();
    }//GEN-LAST:event_facturaWebBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerReservorioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerReservorioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerReservorioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerReservorioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerReservorioFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JButton facturaWebBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton presupuestarBtn;
    private javax.swing.JTable tablaReservorio;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        borrarTabla();
        fc = null;
        try {
            fc = new FcReservedService().getAllFcReserved();
            //   new FcReservedService().getAllFcReserved();
        } catch (Exception ex) {
            Logger.getLogger(VerReservorioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (fc != null && !fc.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tablaReservorio.getModel();
            for (FcReserved fac : fc) {
                Object ob[] = new Object[5];
                ob[0] = sdf.format(fac.getFecha());
                if(fac.getCliente() != null){
                    if(fac.getCliente().equals("")){
                        
                    }
                }
                ob[1] = fac.getCliente().getCodigo();
                ob[2] = fac.getCliente().getRazonSocial();
                ob[3] = fac.getCliente().getCuit();
                ob[4] = df.format(fac.getTotal());
                tbl.addRow(ob);
            }
            tablaReservorio.setModel(tbl);
        }
    }

//    private void facturar() {
//        int row = tablaReservorio.getSelectedRow();
//        if (row < 0) {
//            JOptionPane.showMessageDialog(this, "Debe seleccionar para poder Facturar");
//            return;
//        }
//        FcReserved reservada = fc.get(row);
//        GenereFacturaFrame gff = new GenereFacturaFrame(reservada);
//        gff.setVisible(true);
//        this.dispose();
//    }

    private void presupuestar() {
        int row = tablaReservorio.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar para poder Presupuestar");
            return;
        }
        FcReserved reservada = fc.get(row);
        GenerePresupuestoFrame gff = new GenerePresupuestoFrame(reservada);
        gff.setVisible(true);
        this.dispose();
    }

    private void eliminar() {
        int row = tablaReservorio.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una linea");
        } else {
            FcReserved fcr = fc.get(row);
            int opc = JOptionPane.showConfirmDialog(null,
                    "Esta seguro de eliminar "
                    + "\n" + fcr.getCliente().getRazonSocial() + "\nImporte: $"
                    + fcr.getTotal(), "Atencion",
                    JOptionPane.YES_NO_OPTION);
            // 0 = si; 1 = no
            if (opc == 0) {
                List<RenglonFcReserved> renglones = null;
                try {
                    renglones = new RenglonFcReservedService().getRenglonesDeReserved(fcr);
                } catch (Exception ex) {
                    Logger.getLogger(VerReservorioFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (renglones != null && !renglones.isEmpty()) {
                    for (RenglonFcReserved renglon : renglones) {
                        try {
                            new RenglonFcReservedService().deleteRenglonFcReserved(renglon);
                        } catch (Exception ex) {
                            Logger.getLogger(VerReservorioFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }
                try {
                    new FcReservedService().deleteFcReserved(fcr);
                } catch (Exception ex) {
                    Logger.getLogger(VerReservorioFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                //JOptionPane.showMessageDialog(this, "Eliminado correctamente");
                borrarTabla();
                llenarTabla();
            }
        }
    }

    private void borrarTabla() {
        int rows = tablaReservorio.getRowCount();
        if (rows > 0) {
            DefaultTableModel tbl = (DefaultTableModel) tablaReservorio.getModel();
            for (int i = 0; i < rows; i++) {
                tbl.removeRow(0);
            }
            tablaReservorio.setModel(tbl);
        }
    }

    private void facturaWeb() {
        int row = tablaReservorio.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "SELECCIONE UNA PARA GENERAR NUEVA FACTURA");
            return;
        }
        FcReserved reservada = fc.get(row);
        GenereFacturaWebDesdeReservorioFrame gfwf = new GenereFacturaWebDesdeReservorioFrame(reservada);
        //GenerePresupuestoFrame gff = new GenerePresupuestoFrame(reservada);
        gfwf.setVisible(true);
        this.dispose();
    }
}
