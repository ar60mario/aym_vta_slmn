/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Usuario;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.UsuarioService;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class AbmUsuariosFrame extends javax.swing.JFrame {

    private List<Usuario> usuarios = null;

    /**
     * Creates new form AbmUsuariosFrame
     */
    public AbmUsuariosFrame() {
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        initComponents();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        nuevoBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        desbloquearBtn = new javax.swing.JButton();
        bloquearBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nombre", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);
        if (tablaUsuarios.getColumnModel().getColumnCount() > 0) {
            tablaUsuarios.getColumnModel().getColumn(0).setPreferredWidth(10);
            tablaUsuarios.getColumnModel().getColumn(1).setPreferredWidth(300);
            tablaUsuarios.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        borrarBtn.setText("Borrar");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        desbloquearBtn.setText("Desbloquear");
        desbloquearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desbloquearBtnActionPerformed(evt);
            }
        });

        bloquearBtn.setText("Bloquear");
        bloquearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloquearBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Ver");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(desbloquearBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bloquearBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(modificarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(volverBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoBtn)
                    .addComponent(borrarBtn)
                    .addComponent(volverBtn)
                    .addComponent(desbloquearBtn)
                    .addComponent(modificarBtn)
                    .addComponent(bloquearBtn)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        AltaUsuarioFrame auf = new AltaUsuarioFrame();
        auf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void desbloquearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desbloquearBtnActionPerformed
        desbloquearSistema();
        volver();
    }//GEN-LAST:event_desbloquearBtnActionPerformed

    private void bloquearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloquearBtnActionPerformed
        bloquearBtn();
        volver();
    }//GEN-LAST:event_bloquearBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        Usuario usu = null;
        int row = tablaUsuarios.getSelectedRow();
        if (row < 0){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un usuario a Modificar");
            return;
        } else {
            usu = usuarios.get(row);
        }
        if (usu != null){
            ModificarUsuarioFrame muf = new ModificarUsuarioFrame(usu);
            muf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_modificarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmUsuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmUsuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmUsuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmUsuariosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmUsuariosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bloquearBtn;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JButton desbloquearBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        usuarios = null;
        try {
            usuarios = new UsuarioService().getAllUsuarios();
        } catch (Exception ex) {
            Logger.getLogger(AbmUsuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (usuarios != null && !usuarios.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tablaUsuarios.getModel();
            for (Usuario usr : usuarios) {
                Object ob[] = new Object[3];
                ob[0] = usr.getCodigo();
                ob[1] = usr.getNombre();
                if (usr.getActivo()) {
                    ob[2] = "Activo";
                } else {
                    ob[2] = "Inactivo";
                }
                tbl.addRow(ob);
            }
            tablaUsuarios.setModel(tbl);
        }
    }

    private void desbloquearSistema() {
        String rutaArchivo = "c:/ventas/permisos.txt";
        File archivo = new File(rutaArchivo);
        PrintWriter pw = null;
        if (archivo.exists()) {
            archivo.delete();
        }
        try {
            pw = new PrintWriter(archivo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AbmUsuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        int escape = JOptionPane.showConfirmDialog(null, "CONFIRME DESBLOQUEAR SISTEMA", "AtenciÃ³n", JOptionPane.YES_NO_OPTION);
        if (escape == 0) {
            pw.println("1");
            JOptionPane.showMessageDialog(this, "SISTEMA DESBLOQUEADO");
        }
        pw.close();
    }

    private void bloquearBtn() {
        String rutaArchivo = "c:/ventas/permisos.txt";
        File archivo = new File(rutaArchivo);
        PrintWriter pw = null;
        if (archivo.exists()) {
            archivo.delete();
        }
        try {
            pw = new PrintWriter(archivo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AbmUsuariosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        int escape = JOptionPane.showConfirmDialog(null, "CONFIRME BLOQUEAR SISTEMA", "AtenciÃ³n", JOptionPane.YES_NO_OPTION);
        if (escape == 0) {
            pw.println("3");
            JOptionPane.showMessageDialog(this, "SISTEMA BLOQUEADO");
        }
        pw.close();
    }

    private void volver() {
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }
}
