/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Cliente;
import ar.com.ventas.entities.CtaCteCliente;
import ar.com.ventas.entities.Customer;
import ar.com.ventas.entities.Inventory;
import ar.com.ventas.entities.Stores;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.ClienteService;
import ar.com.ventas.services.CtaCteClienteService;
import ar.com.ventas.services.CustomerService;
import ar.com.ventas.services.InventoryService;
import ar.com.ventas.services.StoreService;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class ChekCtaCteClientesFrame extends javax.swing.JFrame {

    private DecimalFormat df = new DecimalFormat("#0.00");
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form ChekCtaCteClientesFrame
     */
    public ChekCtaCteClientesFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        compararSaldosBtn = new javax.swing.JButton();
        totalesPorDiaBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        compraraBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CUENTA CORRIENTE CLIENTES");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        compararSaldosBtn.setText("Comparar Saldos");
        compararSaldosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compararSaldosBtnActionPerformed(evt);
            }
        });

        totalesPorDiaBtn.setText("Totales Cta Cte X Dia >>");
        totalesPorDiaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalesPorDiaBtnActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Debe", "Haber", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        compraraBtn.setText("Ver");
        compraraBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compraraBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("CLIENTES Movimiento Cta Cte diario:");

        jLabel2.setText("DEUDORES CF");

        fechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaTxt.setText("FECHA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(compararSaldosBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 509, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalesPorDiaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(compraraBtn)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(compararSaldosBtn))
                .addGap(18, 18, 18)
                .addComponent(totalesPorDiaBtn)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compraraBtn)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void compararSaldosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compararSaldosBtnActionPerformed
        comparaSaldos();
    }//GEN-LAST:event_compararSaldosBtnActionPerformed

    private void totalesPorDiaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalesPorDiaBtnActionPerformed
        totalesPorDiaCtaCte();
    }//GEN-LAST:event_totalesPorDiaBtnActionPerformed

    private void compraraBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compraraBtnActionPerformed
        limpiarTabla();
        comparar();
    }//GEN-LAST:event_compraraBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChekCtaCteClientesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compararSaldosBtn;
    private javax.swing.JButton compraraBtn;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JButton totalesPorDiaBtn;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        MainFrame m = new MainFrame();
        m.setVisible(true);
        this.dispose();
    }

    private void comparaSaldos() {
        List<Cliente> clientes = null;
        try {
            clientes = new ClienteService().getAllClienteConSaldo();
        } catch (Exception ex) {
            Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (clientes != null && !clientes.isEmpty()) {
            for (Cliente c : clientes) {
                Double s = c.getSaldo();
                CtaCteCliente movimiento = null;
                try {
                    movimiento = new CtaCteClienteService().getUltimoMovimiento(c);
                } catch (Exception ex) {
                    Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println(s);
                System.out.println(movimiento.getSaldo());
                String s1 = df.format(s);
                String s2 = df.format(movimiento.getSaldo());
                if (!s1.equals(s2)) {
                    System.out.println(movimiento.getCliente().getCodigo());
                    JOptionPane.showMessageDialog(this, "Aceptar");
                }
            }
        }

        List<Customer> clients = null;
        try {
            clients = new CustomerService().getAllCustomersConSaldo();
        } catch (Exception ex) {
            Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (clients != null && !clients.isEmpty()) {
            for (Customer c : clients) {
                Double s = c.getSaldo();
                Inventory movimiento = null;
                try {
                    movimiento = new InventoryService().getUltimoMovimiento(c);
                } catch (Exception ex) {
                    Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println(s);
                System.out.println(movimiento.getSaldo());
                String s1 = df.format(s);
                String s2 = df.format(movimiento.getSaldo());
                if (!s1.equals(s2)) {
                    System.out.println(movimiento.getCliente().getCodigo());
                    JOptionPane.showMessageDialog(this, "Aceptar");
                }
            }
        }
    }

    private void totalesPorDiaCtaCte() {
        A0TstSaldoCteFrame f = new A0TstSaldoCteFrame();
        f.setVisible(true);
        this.dispose();
    }

    private void limpiarTabla() {
        int rows = tabla.getRowCount();
        if (rows > 0) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for (int i = 0; i < rows; i++) {
                tbl.removeRow(0);
            }
            tabla.setModel(tbl);
        }
    }

    private void comparar() {
        Date f = new Date();
        try {
            f = sdf.parse(fechaTxt.getText());
        } catch (ParseException ex) {
            Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Inventory movim = null;
        List<Customer> clie = null;
        try {
            clie = new CustomerService().getAllCustomersConSaldo();
        } catch (Exception ex) {
            Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (clie != null && !clie.isEmpty()) {
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            Double totMovim = 0.0;
            for (Customer cli : clie) {
                try {
                    movim = new InventoryService().getUltimoMovimientoPorDia(cli, f);
                } catch (Exception ex) {
                    Logger.getLogger(ChekCtaCteClientesFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println(movim);
                if (movim != null) {
                    Object o[] = new Object[4];
                    o[0] = movim.getCliente().getCodigo();
                    o[1] = df.format(movim.getDebe());
                    o[2] = df.format(movim.getHaber());
                    o[3] = df.format(movim.getSaldo());
                    totMovim += movim.getSaldo();
                    tbl.addRow(o);
                }
            }
            Object o[] = new Object[4];
            o[0] = "TOTAL";
            o[1] = " ";
            o[2] = " ";
            o[3] = df.format(totMovim);
            tbl.addRow(o);
            tabla.setModel(tbl);
        }
    }
}
