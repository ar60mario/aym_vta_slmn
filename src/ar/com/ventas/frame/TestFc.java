/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Activity;
import ar.com.ventas.entities.Cliente;
import ar.com.ventas.entities.Customer;
import ar.com.ventas.entities.Inventory;
import ar.com.ventas.services.ActivityService;
import ar.com.ventas.services.ClienteService;
import ar.com.ventas.services.CustomerService;
import ar.com.ventas.services.InventoryService;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class TestFc extends javax.swing.JFrame {

    /**
     * Creates new form TestFc
     */
    public TestFc() {
        initComponents();
        String cod = "5301";
        //cargarFcByCodigo(cod);
        cargarCtaCteByCodigo(cod);
        String fecha1 = "01/11/2015";
        String fecha2 = "21/11/2015";
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaA = null;
        Date fechaDe = null;
        try {
            
            fechaDe = sdf.parse(fecha1);
            
        } catch (ParseException ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            
            fechaA = sdf.parse(fecha2);
            
        } catch (ParseException ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error en las fechas");
        }
        cargarCtaCteByCodAndFecha(cod,fechaDe,fechaA);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestFc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void cargarFcByCodigo(String cod) {
        Customer cli = null;
        try {
            cli = new CustomerService().getCustomerByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<Activity> fc = null;
        try {
            fc = new ActivityService().getAllActivityByCodigo(cli);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (fc != null) {
            for (Activity fac:fc) {
                System.out.println(fac.getFecha());
                System.out.println(fac.getTotal());
                System.out.println(fac.getNumeroFactura());
            }
        }
    }

    private void cargarCtaCteByCodigo(String cod) {
        Customer cli = null;
        try {
            cli = new CustomerService().getCustomerByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<Inventory> inv = null;
        try {
            inv = new InventoryService().getAllInventory(); //getAllInventoryByCodigoYFecha(cli, null, null);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Inventory iv:inv) {
            System.out.println(iv.getFecha());
            if (iv.getFactura() != null) {
                System.out.println(iv.getFactura().getNumeroFactura());
            } else {
                System.out.println("no es fc");
            }
            if (iv.getDebe() != null) {
                System.out.println(iv.getDebe());
            }
            if (iv.getHaber() != null) {
                System.out.println(iv.getHaber());
            }
        }
    }

    private void cargarCtaCteByCodAndFecha(String cod, Date fechaDe, Date fechaA) {
        List<Inventory> iv = null;
        Customer cu = null;
        try {
            cu = new CustomerService().getCustomerByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(cu.getCodigo());
        try {
            iv = new InventoryService().getAllInventoryByCodigoYFecha(cu, fechaDe, fechaA);
        } catch (Exception ex) {
            Logger.getLogger(TestFc.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cu != null) {
            if (iv != null) {
                for (Inventory inv:iv) {
                    System.out.println(inv.getFecha());
                    System.out.println(inv.getCliente().getSaldo());
                }
            }
        }
    }
}
