/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Usuario;
import ar.com.ventas.services.UsuarioService;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class AltaUsuarioFrame extends javax.swing.JFrame {

    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * Creates new form NuevoUsusarioFrame
     */
    public AltaUsuarioFrame() {
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        initComponents();
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        activoCbx = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        guardarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        codigoTxt = new javax.swing.JTextField();
        nombreTxt = new javax.swing.JTextField();
        fechaTxt = new javax.swing.JTextField();
        comboNivel = new javax.swing.JComboBox();
        contrasenaTxt = new javax.swing.JPasswordField();
        confirmeContrasenaTxt = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ALTA NUEVO USUARIO");

        jLabel1.setText("Código:");

        jLabel2.setText("Nombre:");

        activoCbx.setText("Activo");

        jLabel3.setText("Nivel:");

        jLabel4.setText("Fecha:");

        jLabel5.setText("Contraseña:");

        jLabel6.setText("Repetir Contraseña:");

        guardarBtn.setText("Guardar");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        codigoTxt.setText("COD");
        codigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoTxtKeyPressed(evt);
            }
        });

        nombreTxt.setText("NOMBRE");
        nombreTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreTxtKeyPressed(evt);
            }
        });

        fechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaTxt.setText("FECHA");
        fechaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaTxtKeyPressed(evt);
            }
        });

        comboNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboNivel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboNivelKeyPressed(evt);
            }
        });

        contrasenaTxt.setText("CONTRASEÑA");
        contrasenaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contrasenaTxtKeyPressed(evt);
            }
        });

        confirmeContrasenaTxt.setText("jPasswordField2");
        confirmeContrasenaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmeContrasenaTxtKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guardarBtn)
                                .addGap(18, 18, 18)
                                .addComponent(volverBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(contrasenaTxt)
                                    .addComponent(confirmeContrasenaTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))))
                        .addGap(0, 214, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(activoCbx)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombreTxt)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 152, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(activoCbx)
                    .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(contrasenaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(confirmeContrasenaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBtn)
                    .addComponent(volverBtn))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        guardar();
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void codigoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!codigoTxt.getText().isEmpty()) {
                if (!existe()) {
                    nombreTxt.requestFocus();
                }
            }
        } else {
            if (evt.getKeyCode() != 8 // back space
                    && evt.getKeyCode() != 37 //flecha izquierda
                    && evt.getKeyCode() != 39 //flecha derecha
                    && evt.getKeyCode() != 17 //Ctrl
                    && evt.getKeyCode() != 16 //Mayuscula
                    && evt.getKeyCode() != 38 //flecha arriba
                    && evt.getKeyCode() != 40 //flecha abajo
                    && evt.getKeyCode() != 67 //C
                    && evt.getKeyCode() != 20 //traba mayusculas
                    && evt.getKeyCode() != 27 //Escape
                    && evt.getKeyCode() != 86 //V
                    && evt.getKeyCode() != 36 //Inicio
                    && evt.getKeyCode() != 35 //fin
                    && evt.getKeyCode() != 155 //Insert
                    // && evt.getKeyCode() != 110  // punto decimal
                    //&& evt.getKeyCode() != 45 // Menos
                    && evt.getKeyCode() != 127) { // Suprimir
                if (!isNumeric(evt)) {
                    JOptionPane.showMessageDialog(this, "Solo números");
                    codigoTxt.setText("");
                    codigoTxt.requestFocus();

                }
            }
        }
    }//GEN-LAST:event_codigoTxtKeyPressed

    private void nombreTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!nombreTxt.getText().isEmpty()) {
                comboNivel.requestFocus();
                comboNivel.addFocusListener(null);
                comboNivel.showPopup();
            }
        }
    }//GEN-LAST:event_nombreTxtKeyPressed

    private void comboNivelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboNivelKeyPressed
        if (evt.getKeyCode() == 10) {
            int row = comboNivel.getSelectedIndex();
            if (row > 0) {
                fechaTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_comboNivelKeyPressed

    private void fechaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (fechaTxt.getText().isEmpty()) {
                fechaTxt.setText(sdf.format(new Date()));
                fechaTxt.requestFocus(); //mismo campo
            } else {
                int largo = fechaTxt.getText().length();
                if (largo == 2) {
                    Calendar cal = Calendar.getInstance();
                    int mes = cal.get(Calendar.MONTH) + 1;
                    int anio = cal.get(Calendar.YEAR);
                    String an = String.valueOf(anio);
                    String f = "0" + String.valueOf(mes);
                    if (f.length() > 2) {
                        f = f.substring(1, 3);
                    }
                    f = f + "/" + an;
                    fechaTxt.setText(fechaTxt.getText() + "/" + f);
                    // request focus prox campo
                    contrasenaTxt.requestFocus();
                } else {
                    if (largo == 5) {
                        Calendar cal = Calendar.getInstance();
                        int anio = cal.get(Calendar.YEAR);
                        String an = "/" + String.valueOf(anio);
                        fechaTxt.setText(fechaTxt.getText() + an);
                        // request focus prox campo
                        contrasenaTxt.requestFocus();
                    } else {
                        if (largo == 8) {
                            String x_f = fechaTxt.getText();
                            String x_f1 = x_f.substring(0, 6);
                            String x_f2 = x_f.substring(6, 8);
                            fechaTxt.setText(x_f1 + "20" + x_f2);
                            contrasenaTxt.requestFocus();
                        } else {
                            if (largo != 10) {
                                JOptionPane.showMessageDialog(this, "Error en fecha");
                                fechaTxt.setText("");
                                // request focus mismo campo
                                fechaTxt.requestFocus();
                            } else {
                                String veinte = fechaTxt.getText().substring(6, 8);
                                if (!veinte.equals("20")) {
                                    JOptionPane.showMessageDialog(this, "Error en AÑO");
                                    // request focus mismo campo
                                    fechaTxt.requestFocus();
                                } else {
                                    contrasenaTxt.requestFocus();
//                              request focus prox campo
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_fechaTxtKeyPressed

    private void contrasenaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contrasenaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (contrasenaTxt.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Contraseña no puede estar vacio");
                contrasenaTxt.requestFocus();
            } else {
                confirmeContrasenaTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_contrasenaTxtKeyPressed

    private void confirmeContrasenaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmeContrasenaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (confirmeContrasenaTxt.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Contraseña no puede estar vacio");
                confirmeContrasenaTxt.requestFocus();
            } else {
                guardar();
            }
        }
    }//GEN-LAST:event_confirmeContrasenaTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaUsuarioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaUsuarioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaUsuarioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaUsuarioFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaUsuarioFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoCbx;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JComboBox comboNivel;
    private javax.swing.JPasswordField confirmeContrasenaTxt;
    private javax.swing.JPasswordField contrasenaTxt;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nombreTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        codigoTxt.setText("");
        nombreTxt.setText("");
        comboNivel.removeAllItems();
        comboNivel.addItem("");
        comboNivel.addItem("1.- Administrador");
        comboNivel.addItem("2.- Temporal 1 dia");
        comboNivel.addItem("3.- Limitado");
        comboNivel.addItem("4.- Bloqueado");
        fechaTxt.setText(sdf.format(new Date()));
        //fechaTxt.setEditable(false);
        contrasenaTxt.setText("");
        confirmeContrasenaTxt.setText("");
        activoCbx.setSelected(true);
    }

    private void guardar() {
        if (verificarCampos()) {
            int escape = JOptionPane.showConfirmDialog(null,
                    "Confirme GUARDAR usuario",
                    "Grabar Usuario",
                    JOptionPane.YES_NO_OPTION);
            if (escape == 0) {
                Usuario ve = new Usuario();
                ve.setCodigo(Integer.valueOf(codigoTxt.getText()));
                if (activoCbx.isSelected()) {
                    ve.setActivo(true);
                } else {
                    ve.setActivo(false);
                }
                ve.setNivel(comboNivel.getSelectedIndex());
                ve.setNombre(nombreTxt.getText());
                ve.setContrasena(Integer.valueOf(new String(contrasenaTxt.getPassword())));
                ve.setFecha(new Date());
                try {
                    new UsuarioService().saveUsuario(ve);
                    JOptionPane.showMessageDialog(this, "Usuario guardado correctamente");
                } catch (Exception ex) {
                    Logger.getLogger(AltaUsuarioFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                limpiarCampos();
                codigoTxt.requestFocus();
            }
        }
    }

    private void volver() {
        AbmUsuariosFrame auf = new AbmUsuariosFrame();
        auf.setVisible(true);
        this.dispose();
    }

    private boolean isNumeric(KeyEvent evt) {
        String cod = String.valueOf(evt.getKeyChar());
        try {
            Integer.parseInt(cod);
        } catch (NumberFormatException ex) {
            return false;
        }
        return true;
    }

    private boolean existe() {
        Usuario usuario = null;
        Integer codigo = Integer.valueOf(codigoTxt.getText());
        try {
            usuario = new UsuarioService().getUsuarioByCodigo(codigo);
            JOptionPane.showMessageDialog(this, "Ya existe código " + usuario.getNombre());
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    private boolean verificarCampos() {
        if (!existe()) {
            if (codigoTxt.getText().isEmpty()) {
                codigoTxt.requestFocus();
                return false;
            }
            if (nombreTxt.getText().isEmpty()) {
                nombreTxt.requestFocus();
                return false;
            }
            if (comboNivel.getSelectedIndex() < 1) {
                comboNivel.requestFocus();
                return false;
            }
            if (contrasenaTxt.getPassword().length < 1) {
                JOptionPane.showMessageDialog(this, "Debe ingresar Contraseña nueva");
                contrasenaTxt.requestFocus();
                return false;
            }
            String c1 = new String(contrasenaTxt.getPassword());
            String c2 = new String(confirmeContrasenaTxt.getPassword());
            if (!c1.equals(c2)) {
                JOptionPane.showMessageDialog(this, "Contraseñas diferentes");
                contrasenaTxt.setText("");
                confirmeContrasenaTxt.setText("");
                contrasenaTxt.requestFocus();
                return false;
            }
            return true;
        } else {
            return false;
        }
    }
}
