/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.ComprobanteCompras;
import ar.com.ventas.entities.Proveedor;
import ar.com.ventas.entities.RcCo;
import ar.com.ventas.services.ComprobanteComprasService;
import ar.com.ventas.services.ProveedorService;
import ar.com.ventas.services.RcCoService;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mario
 */
public class AaTestProveed extends javax.swing.JFrame {

    private DecimalFormat sucu = new DecimalFormat("0000");
    private DecimalFormat nume = new DecimalFormat("00000000");
    private DecimalFormat df = new DecimalFormat("#0.00");
// 91548

    /**
     * Creates new form AaTest
     */
    public AaTestProveed() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(245, 222, 179));
        proveedorTxt.setText("");
//        ComprobanteCompras comprobante = new ComprobanteCompras();
//        comprobante.setEsDebito(true);
//        comprobante.setFechaFactura(null);
//        comprobante.setTotal(1524.265);
//        try {
//            new ComprobanteComprasService().saveComprobante(comprobante);
//        } catch (Exception ex) {
//            Logger.getLogger(AaTest.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        proveedorTxt = new javax.swing.JTextField();
        volverBtn = new javax.swing.JButton();
        buscarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("INCOHERENCIAS PROVEEDOR");

        jLabel1.setText("Proveedor:");

        proveedorTxt.setText("COD");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        buscarBtn.setText("Buscar");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "fecha", "cpbte", "total", "pagado", "X"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(proveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(proveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volverBtn)
                    .addComponent(buscarBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        limpiarTabla();
        buscar();
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AaTestProveed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AaTestProveed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AaTestProveed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AaTestProveed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AaTestProveed().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField proveedorTxt;
    private javax.swing.JTable tabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void buscar() {
        int cod = Integer.valueOf(proveedorTxt.getText());
        Proveedor proveedor = null;
        try {
            proveedor = new ProveedorService().getProveedorByCodigo(cod);
        } catch (Exception ex) {
            Logger.getLogger(AaTestProveed.class.getName()).log(Level.SEVERE, null, ex);
        }
        List<ComprobanteCompras> ccs = null;
        try {
            ccs = new ComprobanteComprasService().getAllFacPorProveedor(proveedor);
        } catch (Exception ex) {
            Logger.getLogger(AaTestProveed.class.getName()).log(Level.SEVERE, null, ex);
        }
        Double top = 0.0;
        Double toc = 0.0;
        Double toi = 0.0;
        DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
        for (ComprobanteCompras c : ccs) {
            Object o[] = new Object[5];
            o[0] = c.getFechaFactura();
            o[1] = c.getLetra() + sucu.format(c.getNumeroSucursal()) + nume.format(c.getNumeroFactura());
            o[2] = df.format(c.getTotal());
            o[3] = df.format(c.getPagado());
            o[4] = df.format(c.getTotal() - c.getPagado());
            toc += c.getTotal();
            top += c.getPagado();
            tbl.addRow(o);
            List<RcCo> rc = null;
            try {
                rc = new RcCoService().getRcCoByComprobante(c);
            } catch (Exception ex) {
                Logger.getLogger(AaTestProveed.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (rc != null && !rc.isEmpty()) {
                for (RcCo r : rc) {
                    int n = 0;
                    Object o1[] = new Object[5];
                    if (r.getImputadoNc() != null) {
                        String inc = df.format(r.getImputadoNc());
                        if (!inc.equals("0,00")) {
                            o1[0] = r.getNotaCredito().getFechaFactura();
                            o1[1] = "NC " + r.getNotaCredito().getNumeroFactura();
                            o1[2] = df.format(r.getImputadoNc());
                            o1[3] = "";
                            o1[4] = "";
                            toi += r.getImputadoNc();
                            n = 1;
                        }
                    }
                    if (r.getReciboProveedor() != null) {
                        if (r.getImputadoRc() != null) {
                            String inc = df.format(r.getImputadoRc());
                            if (!inc.equals("0,00")) {
                                o1[0] = r.getReciboProveedor().getFecha();
                                o1[1] = "RC " + r.getReciboProveedor().getNumero();
                                o1[2] = df.format(r.getImputadoRc());
                                o1[3] = "";
                                toi += r.getImputadoRc();
                                n = 1;
                            }
                        }
                    }
                    if (n > 0) {
                        tbl.addRow(o1);
                    }
//                    tbl.addRow(o1);
                    //JOptionPane.showMessageDialog(this, "VER");
                }
//                List<RcCo> nc = null;
//                nc = new RcCoService().getRcCoByComprobante(c);
                Object o1[] = new Object[5];
                o1[1] = "TOTAL";
                o1[2] = df.format(toi);
                toi = 0.0;
                tbl.addRow(o1);
                //JOptionPane.showMessageDialog(this, "VER");
            }
        }
        Object o[] = new Object[5];
        o[0] = "TOTALES";
        o[2] = df.format(toc);
        o[3] = df.format(top);
        o[4] = df.format(toc - top);
        tbl.addRow(o);
        tabla.setModel(tbl);
    }

    private void volver() {
        AbTestProveed mf = new AbTestProveed();
        mf.setVisible(true);
        this.dispose();
    }

    private void limpiarTabla() {
        int rows = tabla.getRowCount();
        if(rows > 0){
            DefaultTableModel tbl = (DefaultTableModel) tabla.getModel();
            for(int i = 0;i<rows;i++){
                tbl.removeRow(0);
            }
            tabla.setModel(tbl);
        }
    }

}
